name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Rust (Nightly)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: clippy, rustfmt

      - name: Lint (Clippy)
        run: cargo clippy --workspace --all-features --all-targets --no-deps -- -D warnings

      - name: Lint (Rustfmt)
        uses: actions-rust-lang/rustfmt@v1

  test:
    name: Test

    env:
      PROJECT_NAME_UNDERSCORE: nika
      CARGO_INCREMENTAL: 0
      RUSTFLAGS: -Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort
      RUSTDOCFLAGS: -Cpanic=abort

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Rust (Nightly)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: llvm-tools-preview

      - name: Install Nika for integration tests
        run: sh install.sh

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Test with nextest
        run: cargo nextest run --workspace

  coverage:
    name: Coverage

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Rust (Stable)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install Nika for integration tests
        run: sh install.sh

      - name: Install tarpaulin
        uses: taiki-e/install-action@cargo-tarpaulin

      - name: Collect coverage data
        run: cargo tarpaulin --engine llvm --locked --workspace --all-targets --all-features --out Lcov

      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{secrets.CODECOV_TOKEN}}
        with:
          files: lcov.info

  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Rust (Stable)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Build CLI
        run: cargo build --release

  # TODO: release
